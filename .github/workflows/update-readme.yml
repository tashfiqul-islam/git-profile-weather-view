name: Readme Weather Update

on:
  schedule:
    - cron: '0 */8 * * *' # Runs every 8 hrs
  workflow_dispatch:

jobs:
  update-readme-weather:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the weather script repository
      - name: Checkout Weather Script Repository
        uses: actions/checkout@v4
        with:
          repository: tashfiqul-islam/git-profile-weather-view
          path: git-profile-weather-view

      # Step 2: Checkout the personal repository
      - name: Checkout Personal Repository
        uses: actions/checkout@v4
        with:
          repository: tashfiqul-islam/tashfiqul-islam
          path: tashfiqul-islam
          token: ${{ secrets.PAT }}

      # Step 3: Cache Node.js dependencies
      - name: Cache Node.js Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # Step 5: Install dependencies
      - name: Install Dependencies
        run: npm ci
        working-directory: ./git-profile-weather-view

      # Step 6: Run weather script
      - name: Run Weather Script
        run: |
          WEATHER_DATA=$(node src/index.js)
          echo "WEATHER_DATA=$WEATHER_DATA" >> $GITHUB_ENV
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        working-directory: ./git-profile-weather-view

      # Step 7: Update README
      - name: Update README
        run: node src/updateReadme.js "${{ env.WEATHER_DATA }}"
        working-directory: ./git-profile-weather-view

      # Step 8: Import GPG key
      - name: Import GPG Key
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --batch --import
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      # Step 9: Configure Git
      - name: Configure Git
        run: |
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          git config --global user.name "${{ secrets.GH_USERNAME }}"
          git config --global user.signingkey "${{ secrets.GPG_SIGN_KEY }}"
          git config --global gpg.program $(which gpg)
          git config --global commit.gpgsign true
        working-directory: ./tashfiqul-islam

      # Step 10: Commit and Push Changes
      - name: Commit and Push Changes
        run: |
          export GPG_TTY=$(tty)
          cd tashfiqul-islam
          if [ -n "$(git status --porcelain)" ]; then
            git add README.md
            git -c gpg.program="gpg --batch --yes --pinentry-mode loopback" \
              commit -S -am "chore(profile-weather-view): Hourly Weather Update"
            git push origin master
          else
            echo "No changes to commit"
          fi
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
